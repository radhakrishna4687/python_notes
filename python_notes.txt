python Function:
---------------
1.Function concepts: what is function ?
Ans: 

simple function syntax:
	def functio_name(parameters):
		'''doc string'''
		....logic.....
		return value
	call the function
===============================		
example:
	def wish(name):
		print('hello',name,'gudmrng')
	wish('krishna')
	wish('hari')
-------------------------------------------
NOTE:In python overloading concepts is not avilable in python.
---------------------------------------------------------------
def add(x,y):
    print('sum of 2 numbers: ',x+y)
    
def add(x,y,z):
        print('sum of 3 numbers: ',x+y+z)

add(356,567)
add(345,567,6)
=====================================================
Error:
= RESTART: /Users/krishnar/GD/git_folder_20-03-2020/function.py
Traceback (most recent call last):
  File "/Users/krishnar/GD/git_folder_20-03-2020/function.py", line 7, in <module>
    add(356,567)
TypeError: add() missing 1 required positional argument: 'z'
---------=======================================================
date:29-03-2020
==================
##wite afunction the given number is even or odd number
#define afunction
def even_odd(x):
    if x%2==0:
        print('The given number is even: ',x)
    else:
        print('The given number is odd: ',x)
m=even_odd(int(input('Enter the number: ',)))
------------------------------------------------------
Another example:
#wite afunction the given number is even or odd number
#define afunction
def even_odd(x,y):
    z=x-y #z=x+y #z=x*y
    if z%2==0:
        print('The given number is even: ',z)
    else:
        print('The given number is odd: ',z)
m=even_odd(12,34)
------------------------------------------------
#write a function for factoiral of the given nuber is 
#factorial means, for example for 3! is 1x2x3=6, like this
#the factorial formula is 1*2*3*......*(n-1)*n
#define afunction
def fact(n):
    result = 1
    while n>=1:
        result=result*n
        n=n-1
    return result
for i in range(1,12):
    print('THE FACTORIAL OF {} IS {}'.format(i,fact(i)))
    
======================================    
NOTE: IN python there are 'n' number of 'return' values allowed,but in compare to another language not their.
=================================================================
example:
def sum_sub(x,y):
    sum=x+y
    sub=x-y
    return sum,sub
a,b=sum_sub(123,456)#) #in the form of tuple store, tuple unpacking
print('The sum value is: ',a)
print('The sub value is : ',b)
 ================================================================= def cal(x,y):
    sum=x+y
    sub=x-y
    mul=x*y
    div=x/y
    return sum,sub,mul,div 
t=cal(199,4)
print('The result are: ')
for i in t:
    print(i)
============================
def cal(x,y): ==> Formal Parameters
    sum=x+y
    sub=x-y
    mul=x*y
    div=x/y
    return sum,sub,mul,div  #####in Tuple unpacking thers is 4 valus is there and then there to declare the variable also 4 only.
a,b,c,d=cal(199,4) ===>>Actual arguments
print('The result are: ')
for i in t:
    print(i)
  NOTE: sum,sub,mul,div=a,b,c,d  
========================================
there are fcatagiers of arguments 
1.positionalArgumrnts
2.Keyword arguments
3.Defalut argumenys
4.Variable laength arguments
---------------------------
positional arguments example:
1. def cal(x,y):
		print('the summ of two numbers',a+b)
	cal(10,3)
	#here the positional argument of a=10,and b=3
================================================
2.keyword argguments;
def sub(a,b):
		print(a-b)
sub(a=24,b=40)
#here Keyword argunts are define by the values to beassing them
a=10,b=3 like this		

